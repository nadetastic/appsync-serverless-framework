service: sls-appsync-example
frameworkVersion: "3"

provider:
  name: aws
  region: us-west-2
  profile: west2

resources:
  Resources:
    postsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: postsTable
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
plugins:
  - serverless-appsync-plugin

appSync:
  name: sls-appsync

  logging:
    level: ALL
    retentionInDays: 14

  authentication:
    type: API_KEY

  apiKeys:
    - name: myKey
      expiresAfter: 7d

  dataSources:
    myPostTable:
      type: AMAZON_DYNAMODB
      description: "My appsync table"
      config:
        tableName: postsTable

    myLambda:
      type: "AWS_LAMBDA"
      config:
        function:
          handler: "lambda/index.handler"
          runtime: nodejs18.x
          package:
            individually: true
            patterns:
              - "!./node_modules**" # exclude root files
              - "!./**"
              - "./lambda/**"
    myEndpoint:
      type: "HTTP"
      config:
        endpoint: https://dummyjson.com

  resolvers:
    Query.listPosts:
      # dataSource: myLambda
      dataSource: myPostTable
      kind: UNIT
      # code: "resolvers/listPosts.js"
      code: "resolvers/listPostsDDB.js"
    Query.listUsers:
      dataSource: myEndpoint
      kind: UNIT
      code: "resolvers/listUsers.js"

    Query.getPost:
      dataSource: myLambda
      kind: UNIT
      code: "resolvers/getPost.js"
    Query.getUser:
      dataSource: myEndpoint
      kind: UNIT
      code: "resolvers/getUser.js"
    Mutation.addPost:
      dataSource: myPostTable
      kind: UNIT
      code: "resolvers/addPostDDB.js"
